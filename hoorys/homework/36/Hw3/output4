Standard ML of New Jersey v110.80 [built: Wed Mar 15 00:57:49 2017]
- [opening Hw3-4.sml]
datatype 'a Exp
  = LEAF of 'a | NODE of ('a * 'a -> 'a) * 'a Exp * 'a Exp | VAR of string
val evalExp = fn : 'a Exp * (string -> 'a) -> 'a
val mergeDistinctSorted = fn : string list * string list -> string list
val varsOfExp = fn : 'a Exp -> string list
val it = () : unit
val exp1 = NODE (fn,LEAF 2,NODE (fn,LEAF #,VAR #)) : int Exp
val exp2 = NODE (fn,NODE (fn,VAR #,VAR #),NODE (fn,VAR #,VAR #)) : int Exp
val exp3 = NODE (fn,LEAF 2.0,LEAF 3.1) : real Exp
val exp4 = NODE (fn,LEAF 2,LEAF 3) : int Exp
exception Undef
val ass1 = fn : string -> int
val ass2 = fn : string -> int
val empty_ass = fn : string -> 'a
val e1 = 32 : int
val e2 = 17 : int
val e3 = 21 : int
val e4 = 5.1 : real
val e5 = 5 : int
val e6 = 5 : int
val m1 = [] : string list
val m2 = ["a","b"] : string list
val m3 = ["this"] : string list
val m4 = ["a","c","e","f"] : string list
val m5 = ["a","b","d"] : string list
val m6 = ["a","b","d"] : string list
val m7 = ["a","b","d"] : string list
val v1 = ["x"] : string list
val v2 = ["x","y"] : string list
val v3 = [] : string list
val v4 = [] : string list
- 
